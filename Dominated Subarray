#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define IO ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
using namespace __gnu_pbds;
using namespace std;
#define ll long long
typedef tree<
pair<ll , ll>,
null_type,
less<pair<ll,ll> >,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;
const int N = 3e5 + 4 ,  MOD = 1e9 + 7;
/*bool isSorted(ll arr[], ll size) {
    for (ll i = 1; i < size; ++i) {
        if (arr[i - 1] > arr[i]) {
            return false;
        }
    }
    return true;
}
ll gcd(ll a,ll b)
{
    if(b==0)
    {
        return a;
    }
    gcd(b,(a%b));
}
bool is_valid(string expression)
{
    stack<char>s;
    int len=expression.length();
    for(int i=0;i<len;i++)
    {
        if(expression[i]=='('||expression[i]=='{'||expression[i]=='[')
        {
            s.push(expression[i]);
        }
        else if(s.empty() || (expression[i] == ')' && s.top() != '(') || (expression[i] == '}' && s.top() != '{') || (expression[i] == ']' && s.top() != '['))
        {
            return false;
        }
        else
        {
            s.pop();
        }
    }

    return s.empty();
}*/
int main() {
   ll t;
   cin>>t;
   while(t--)
   {
       ordered_set od;
       int siz;
       cin>>siz;
       map<int,vector<int>>mp;
       for (int i = 0; i < siz; ++i) {
           int x;
           cin >> x;
           mp[x].push_back(i);
       }
       int ans=MOD;
       for (auto item:mp) {
           for (int i = 1; i <item.second.size() ; ++i) {
            ans= min(ans,item.second[i]-item.second[i-1]+1);
           }
       }
       if (ans==MOD)
       {
           cout<<-1<<"\n";
       }
       else
       {
           cout<<ans<<"\n";
       }
       
   }

    return 0;
}
